FROM node:22-alpine AS builder

RUN mkdir -p /opt/app
RUN mkdir -p /opt/artifact

# Set working directory
WORKDIR /opt/app

# Copy package files
COPY package*.json ./

# npm install
RUN npm i --no-audit --no-fund && npm cache clean --force

# Copy application code
COPY . .

# Run build
RUN npm run build -w apps/todo-pro-trpc-server

RUN rm -rf node_modules

FROM node:22-alpine

RUN apk add --no-cache zip

RUN mkdir -p /opt/app
RUN mkdir -p /opt/artifact

# Set working directory
WORKDIR /opt/app

COPY --from=builder /opt/app/apps/todo-pro-trpc-server/dist ./dist
COPY --from=builder /opt/app/apps/todo-pro-trpc-server/package.json ./package.json
COPY --from=builder /opt/app/package-lock.json ./package-lock.json

RUN npm i --production --no-audit --no-fund

RUN mv dist/* /opt/app

# Remove unnecessary files for production
RUN rm -rf .git .gitignore README.md .env.example tests/ docs/ src/ dist/ *.md package-lock.json tsconfig.json Dockerfile

RUN zip -r lambda_payload.zip ./*

# RUN ls -l

CMD ["cp", "/opt/app/lambda_payload.zip", "/opt/artifact"]
